[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "eduhub"
version = "0.1.0"
description = "Modern education portal modernizing Plone CMS with FastAPI and React"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "EduHub Team", email = "dev@eduhub.local"},
]
keywords = ["plone", "django", "education", "cms", "fastapi", "react"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "httpx>=0.28.0",
    "pydantic>=2.10.0",
    "email-validator>=2.2.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.14.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.2.0",
    "celery>=5.4.0",
    "python-multipart>=0.0.20",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "pandas>=2.2.0",
    "openpyxl>=3.1.0",
    "prometheus-client>=0.20.0",
    "slack-sdk>=3.27.0",
    "websockets>=12.0",
    "aiohttp>=3.9.0",
    "channels-redis>=4.2.0",
    "bleach>=6.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-benchmark>=5.1.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.13.0",
    "tox>=4.23.0",
    "pre-commit>=4.0.0",
    "httpx>=0.28.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.5.0",
]
docker = [
    "gunicorn>=23.0.0",
]

[project.urls]
Homepage = "https://github.com/eduhub/eduhub"
Documentation = "https://eduhub.readthedocs.io"
Repository = "https://github.com/eduhub/eduhub.git"
"Bug Tracker" = "https://github.com/eduhub/eduhub/issues"

[project.scripts]
eduhub = "eduhub.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py39', 'py311', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | upstream
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["eduhub", "hello"]
skip = [".venv", "build", "dist", "upstream"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
exclude = [
    "upstream/",
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "redis.*",
    "psycopg2.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async",
    "benchmark: marks tests as performance benchmarks",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "upstream/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
