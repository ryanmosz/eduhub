
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eduhub-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-eduhub}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-eduhub}
      POSTGRES_DB: ${POSTGRES_DB:-eduhub}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-eduhub}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eduhub-network

  # Redis Cache and Broker
  redis:
    image: redis:7-alpine
    container_name: eduhub-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - eduhub-network

  # Real Plone CMS with REST API
  plone:
    image: plone/plone-backend:6.0
    platform: linux/amd64  # Works on ARM64 Macs!
    container_name: eduhub-plone
    environment:
      SITE: Plone
      ADDONS: plone.restapi
      PLONE_EXTENSIONS: plone.restapi:default
    ports:
      - "8080:8080"
    volumes:
      - plone_data:/data
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/Plone/@site"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - eduhub-network

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: eduhub-api
    environment:
      - DEBUG=true
      - DATABASE_URL=postgresql://eduhub:eduhub@postgres:5432/eduhub
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - PLONE_URL=http://plone:8080/Plone
      # Auth0 OAuth2 Configuration
      - AUTH0_DOMAIN=${AUTH0_DOMAIN:-dev-1fx6yhxxi543ipno.us.auth0.com}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID:-s05QngyZXEI3XNdirmJu0CscW1hNgaRD}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET:-}
      - AUTH0_ALGORITHMS=${AUTH0_ALGORITHMS:-RS256}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE:-s05QngyZXEI3XNdirmJu0CscW1hNgaRD}
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn src.eduhub.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - eduhub-network

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: eduhub-celery-worker
    environment:
      - DATABASE_URL=postgresql://eduhub:eduhub@postgres:5432/eduhub
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    depends_on:
      - postgres
      - redis
    command: celery -A src.eduhub.celery_app worker --loglevel=info
    networks:
      - eduhub-network

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: eduhub-celery-beat
    environment:
      - DATABASE_URL=postgresql://eduhub:eduhub@postgres:5432/eduhub
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    depends_on:
      - postgres
      - redis
    command: celery -A src.eduhub.celery_app beat --loglevel=info
    networks:
      - eduhub-network

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eduhub-frontend
    environment:
      - VITE_API_URL=http://api:8000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
    depends_on:
      - api
    command: npm run dev
    networks:
      - eduhub-network

volumes:
  postgres_data:
  redis_data:
  plone_data:

networks:
  eduhub-network:
    driver: bridge
